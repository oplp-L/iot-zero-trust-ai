services:
  api:
    build: .
    image: iot-zt-ai:latest
    container_name: iot-zt-ai-api
    ports:
      - "8000:8000"
    env_file:
      - ./.env              # 可选：本地环境变量文件
    environment:
      # 若 .env 没设置，这里提供默认值
      SECRET_KEY: "${SECRET_KEY:-replace-me}"
      SQLALCHEMY_DATABASE_URL: "${SQLALCHEMY_DATABASE_URL:-sqlite:////data/iot_zt_ai.db}"
      UVICORN_HOST: "${UVICORN_HOST:-0.0.0.0}"
      UVICORN_PORT: "${UVICORN_PORT:-8000}"
    volumes:
      - ./data:/data        # 持久化 sqlite DB 到宿主机 ./data
    restart: unless-stopped

  # 可选：一键在容器中跑“稳定测试集”
  test:
    build: .
    image: iot-zt-ai:latest
    container_name: iot-zt-ai-test
    env_file:
      - ./.env
    environment:
      SECRET_KEY: "${SECRET_KEY:-replace-me}"
      SQLALCHEMY_DATABASE_URL: "${SQLALCHEMY_DATABASE_URL:-sqlite:////data/iot_zt_ai.db}"
    volumes:
      - ./data:/data
    command: >
      sh -c "python -m pytest -q tests/test_devices_delete.py tests/test_risk_engine_e2e.py
      -k 'not test_restore_after_cooldown_and_low'"